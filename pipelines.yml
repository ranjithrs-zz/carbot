resources:
  - name: src
    type: GitRepo
    configuration:
      gitProvider: ranjithr_github
      path: ranjithrs/carbot
  - name: calcImage
    type: Image
    configuration:
      registry: artDocker
      imageName: demo/mycalcificator
      imageTag: latest
      autoPull: false
pipelines:
  - name: car_pipeline
    steps:
      - name: build
        type: Bash
        configuration:
          affinityGroup: myGroup        
          inputResources:
            - name: src
              trigger: false
        execution:
          onExecute:
            - cd $res_src_resourcePath
            - python -m py_compile calc.py
            - add_run_variable imageTag="production"
      - name: train_model
        type: Bash
        configuration:
          affinityGroup: myGroup
          inputSteps:
            - name: build
        execution:
          onExecute:
            - sleep 5
            - echo "Training model completed"
      - name: test_model
        type: Bash
        configuration:
          affinityGroup: myGroup
          inputSteps:
            - name: train_model
          inputResources:
            - name: src
              trigger: false               
        execution:
          onExecute:
            - pip install pytest
            - cd $res_src_resourcePath            
            - py.test --verbose --junit-xml test-reports/results.xml test_calc.py
            - save_tests $res_src_resourcePath/test-reports/results.xml          
      - name: package_artifacts
        type: Bash
        configuration:
          environmentVariables:
            imageName: 34.66.110.173:8081/docker-local/calcificator
            dockerImageTag: '${run_number}'        
          inputResources:
            - name: src
              trigger: false          
          inputSteps:
            - name: test_model
          outputResources:
            - name: calcImage
          integrations:
            - name: art
        execution:
          onExecute:
            - pushd $res_src_resourcePath
            - retry_command jfrog rt config --url $int_art_url --user $int_art_user --apikey $int_art_apikey --interactive=false  
            - docker build --pull --no-cache -t $imageName:$imageTag --build-arg REGISTRY=${int_art_url} .
            - write_output calcImage "imageTag="$imageTag
            - jfrog rt docker-push $imageName:$imageTag docker-local --build-name=$pipeline_name --build-number=$run_number
